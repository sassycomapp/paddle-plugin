[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "vsc_ide"
version = "1.0.0"
description = "Unified AG2 orchestrator with Simba knowledge management and MCP integration"
authors = ["AG2 Team <team@ag2.dev>"]
readme = "README.md"
license = "MIT"
packages = [
    {include = "src"},
    {include = "simba"},
    {include = "mcp_servers"}
]

[tool.poetry.dependencies]
# Support both Python 3.7x for Anvil compatibility and 3.10+ for advanced features
python = ">=3.7,<3.14"

# Core dependencies (shared across all systems)
pyyaml = ">=6.0"
python-dotenv = ">=1.0.0"
httpx = ">=0.24.0"
aiohttp = ">=3.8.0"
pydantic = ">=2.0.0"
pydantic-settings = ">=2.7.0"

# AG2 Orchestrator
autogen-core = ">=0.2.0"
autogen-agentchat = ">=0.2.0"
asyncio-mqtt = ">=0.11.0"
websockets = ">=11.0"

# Simba Knowledge Management
langchain = ">=0.3.0"
faiss-cpu = ">=1.8.0"
sentence-transformers = ">=3.2.0"
torch = ">=2.4.0"
torchvision = ">=0.19.0"
torchaudio = ">=2.4.0"

# Web Framework
fastapi = ">=0.115.0"
uvicorn = ">=0.30.0"
python-multipart = ">=0.0.9"

# Database & Storage
psycopg2-binary = ">=2.9.10"
redis = ">=5.2.1"
pgvector = ">=0.4.1"
supabase = ">=2.6.0"
PGvector = ">=0.5.23"
minio = ">=7.2.0"

# Document Processing
markdown = ">=3.7"
unstructured = {version = ">=0.11.0", extras = ["all"]}
markitdown = ">=0.0.1a1"
pdf2image = ">=1.17.0"
pdfminer-six = ">=20240706"
pymupdf = ">=1.24.0"
pillow-heif = ">=0.18.0"

# AI/ML Services
litellm = ">=1.56.6"
ollama = ">=0.4.6"
mistralai = ">=1.5.1"
rank-bm25 = ">=0.2.2"
celery = ">=5.4.0"
rq = ">=2.1.0"

# MCP Integration
mcp = ">=1.12.4"
sse-starlette = ">=2.1.0"
aiofiles = ">=23.2.1"
zeroconf = ">=0.130.0"
fastmcp = ">=0.4.0"

# Security & Validation
cryptography = ">=36.0.0"
pycryptodome = "*"
email-validator = ">=2.2.0"

# Development dependencies
pytest = ">=8.3.4"
pytest-asyncio = ">=0.24.0"
pytest-cov = ">=4.0.0"
black = ">=25.1.0"
isort = ">=6.0.0"
mypy = ">=1.15.0"
flake8 = ">=7.1.2"
bandit = ">=1.8.3"

[tool.poetry.group.dev.dependencies]
nox = ">=2025.2.9"
pre-commit = ">=4.1.0"
autoflake = ">=2.3.1"
safety = ">=3.3.1"
twine = ">=6.1.0"
build = ">=1.2.2.post1"
python-semantic-release = ">=9.21.0"
ipykernel = ">=6.29.5"

[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
sphinx = {version = ">=8.2.1", python = ">=3.11"}
sphinx-rtd-theme = {version = ">=3.0.2", python = ">=3.11"}
[tool.poetry.group.ag2]
optional = true
[tool.poetry.group.ag2.dependencies]
autogen-core = ">=0.2.0"
autogen-agentchat = ">=0.2.0"

[tool.poetry.group.simba]
optional = true
[tool.poetry.group.simba.dependencies]
langchain = ">=0.3.0"
faiss-cpu = ">=1.8.0"
sentence-transformers = ">=3.2.0"

[tool.poetry.group.mcp]
optional = true
[tool.poetry.group.mcp.dependencies]
mcp = ">=1.12.4"
PGvector = ">=0.5.23"
fastmcp = ">=0.4.0"

[tool.poetry.group.database]
optional = true
[tool.poetry.group.database.dependencies]
psycopg2-binary = ">=2.9.10"
redis = ">=5.2.1"
pgvector = ">=0.4.1"
supabase = ">=2.6.0"

[tool.poetry.scripts]
ag2-orchestrator = "src.orchestration.ag2_orchestrator:main"
simba = "simba.cli:main"
memory-service = "mcp_servers.mcp-memory-service.src.mcp_memory_service.server:main"

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 100
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]
skip = [".git", "venv", ".venv", "env", ".env", "__pycache__", "dist", "build"]

[tool.black]
line-length = 100
target-version = ['py37', 'py38', 'py39', 'py310', 'py311', 'py312', 'py313']

[tool.mypy]
python_version = "3.7"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests", "src", "simba", "mcp_servers"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
