name: Multi-Python CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  PYTHON_VERSIONS: '3.8,3.11,3.13'

jobs:
  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.11', '3.13']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests
      run: |
        # Skip tests for Python 3.8 (Anvil compatibility)
        if [ "${{ matrix.python-version }}" = "3.8" ]; then
          echo "Skipping tests for Python 3.8 (Anvil compatibility only)"
        else
          pytest --maxfail=1 --disable-warnings -q
        fi
        
    - name: Validate Python 3.7x compatibility
      if: matrix.python-version == '3.8'
      run: |
        python scripts/validate_anvil_compatibility.py
        
    - name: Upload results
      uses: actions/upload-artifact@v3
      with:
        name: test-results-python-${{ matrix.python-version }}
        path: test_results.json
        retention-days: 30

  compatibility-check:
    name: Compatibility Check
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v3
      
    - name: Generate compatibility report
      run: |
        python scripts/generate_compatibility_report.py
        
    - name: Upload compatibility report
      uses: actions/upload-artifact@v3
      with:
        name: compatibility-report
        path: compatibility_report.json
        retention-days: 30