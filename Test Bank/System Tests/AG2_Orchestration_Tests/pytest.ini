[tool:pytest]
# Pytest configuration for AG2 Orchestration System Tests

# Test discovery
testpaths = unit integration e2e performance load security
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Async testing
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Coverage configuration
addopts = 
    --strict-markers
    --strict-config
    --verbose
    --tb=short
    --cov=src
    --cov-report=term-missing
    --cov-report=html:reports/coverage
    --cov-report=xml:reports/coverage.xml
    --junitxml=reports/junit.xml
    --html=reports/html/report.html
    --self-contained-html
    --numprocesses=auto

# Markers for test categorization
markers =
    unit: Unit tests for individual components
    integration: Integration tests for component interactions
    e2e: End-to-end system tests
    performance: Performance and load tests
    load: Load testing scenarios
    security: Security and vulnerability tests
    slow: Tests that take longer to run
    smoke: Quick smoke tests
    regression: Regression tests
    deployment: Deployment-specific tests
    pure: Pure Python mode tests
    lite: Lite mode tests
    full: Full MCP mode tests

# Logging configuration
log_cli = true
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

# Test timeouts
timeout = 300

# Filter warnings
filterwarnings =
    ignore::UserWarning
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning

# Test order
ordering = random
