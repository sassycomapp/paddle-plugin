{
  "name": "paddle-plugin",
  "version": "1.0.0",
  "description": "Unified AG2 orchestrator with Simba knowledge management and MCP integration",
  "main": "index.js",
  "workspaces": [
    "mcp_servers",
    "brave-search-integration"
  ],
  "scripts": {
    "install:all": "npm install && poetry install",
    "install:python": "poetry install",
    "install:node": "npm install",
    "start:ag2": "poetry run python -m src.orchestration.ag2_orchestrator",
    "start:simba": "poetry run python -m simba.cli",
    "start:memory": "node mcp_servers/agent-memory/index.js",
    "start:rag": "node mcp_servers/rag-mcp-server.js",
    "start:brave": "node mcp_servers/brave-search-mcp-server.js",
    "dev:rag": "nodemon mcp_servers/rag-mcp-server.js",
    "dev:memory": "nodemon mcp_servers/agent-memory/index.js",
    "dev:brave": "nodemon mcp_servers/brave-search-mcp-server.js",
    "test": "npm run test:node && npm run test:python",
    "test:node": "jest",
    "test:python": "poetry run pytest",
    "lint": "npm run lint:node && npm run lint:python",
    "lint:node": "eslint mcp_servers/**/*.js",
    "lint:python": "poetry run black . && poetry run isort . && poetry run flake8 .",
    "typecheck": "poetry run mypy src simba mcp_servers",
    "setup": "npm run setup:python && npm run setup:node",
    "setup:python": "poetry install --with dev",
    "setup:node": "npm install --workspaces",
    "clean": "npm run clean:node && npm run clean:python",
    "clean:node": "rm -rf node_modules mcp_servers/node_modules brave-search-integration/node_modules",
    "clean:python": "poetry run pip cache purge && rm -rf .venv venv simba/.venv",
    "mcp:start": "node .kilocode/integration/mcp-server-manager.js start",
    "mcp:stop": "node .kilocode/integration/mcp-server-manager.js stop",
    "mcp:restart": "node .kilocode/integration/mcp-server-manager.js restart",
    "mcp:status": "node .kilocode/integration/mcp-server-manager.js status",
    "mcp:health": "node .kilocode/integration/mcp-server-manager.js health",
    "mcp:install": "kilocode-mcp-install",
    "mcp:list": "kilocode-mcp-install list",
    "mcp:sync": "kilocode-mcp-install sync",
    "kilocode:setup": "node .kilocode/integration/setup.js",
    "kilocode:validate": "node .kilocode/integration/validate.js",
    "kilocode:config": "node .kilocode/integration/configure.js"
  },
  "keywords": [
    "ag2",
    "orchestrator",
    "mcp",
    "knowledge-management",
    "rag",
    "ai",
    "autogen"
  ],
  "author": "AG2 Team <team@ag2.dev>",
  "license": "MIT",
  "dependencies": {
    "@mcp/agent-memory-server": "file:mcp_servers/agent-memory",
    "@modelcontextprotocol/sdk": "^1.0.0",
    "axios": "^1.7.9",
    "cors": "^2.8.5",
    "dotenv": "^16.4.7",
    "express": "^4.21.2",
    "fs-extra": "^11.2.0",
    "helmet": "^8.0.0",
    "joi": "^17.13.3",
    "node-cron": "^3.0.3",
    "pg": "^8.16.3",
    "pgvector": "^0.2.1",
    "uuid": "^11.0.5",
    "winston": "^3.17.0",
    "ws": "^8.18.0"
  },
  "devDependencies": {
    "@eslint/js": "^9.20.0",
    "@playwright/test": "^1.54.2",
    "eslint": "^9.20.1",
    "globals": "^15.15.0",
    "husky": "^9.1.7",
    "jest": "^29.7.0",
    "lint-staged": "^15.4.3",
    "nodemon": "^3.1.9",
    "prettier": "^3.5.1"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "lint-staged": {
    "*.js": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.py": [
      "poetry run black --quiet",
      "poetry run isort --quiet"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  }
}